"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TypeTuple = void 0;
const TypeCore_1 = require("./TypeCore.cjs");
const result_1 = require("./result.cjs");
class TypeTuple extends TypeCore_1.TypeCore {
    constructor() {
        super(...arguments);
        this.name = 'tuple';
    }
    checkType(value) {
        if (!Array.isArray(value)) {
            return new result_1.ResultErr('Expected a tuple');
        }
        if (value.length !== this.config.schema.length) {
            return new result_1.ResultErr(`Expected ${this.config.schema.length} items`);
        }
        const result = value.map((item, i) => {
            const schema = this.config.schema[i];
            return schema['checkType'](item);
        });
        for (let item of result) {
            if (item instanceof result_1.ResultErr)
                return item;
        }
        return new result_1.ResultOk(result.map((item) => item.value));
    }
}
exports.TypeTuple = TypeTuple;
