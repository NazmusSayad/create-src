import { TypeCore } from "./TypeCore.mjs";
import { ResultErr, ResultOk } from "./result.mjs";
export class TypeTuple extends TypeCore {
    constructor() {
        super(...arguments);
        this.name = 'tuple';
    }
    checkType(value) {
        if (!Array.isArray(value)) {
            return new ResultErr('Expected a tuple');
        }
        if (value.length !== this.config.schema.length) {
            return new ResultErr(`Expected ${this.config.schema.length} items`);
        }
        const result = value.map((item, i) => {
            const schema = this.config.schema[i];
            return schema['checkType'](item);
        });
        for (let item of result) {
            if (item instanceof ResultErr)
                return item;
        }
        return new ResultOk(result.map((item) => item.value));
    }
}
